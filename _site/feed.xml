<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://danielmwatkins.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="http://danielmwatkins.github.io/" rel="alternate" type="text/html" /><updated>2022-09-09T10:08:16-04:00</updated><id>http://danielmwatkins.github.io/feed.xml</id><title type="html">Daniel M. Watkins, PhD</title><subtitle>Climate scientist specializing in Arctic sea ice and the atmospheric boundary layer.</subtitle><author><name>Daniel Watkins</name></author><entry><title type="html">Getting started with Julia</title><link href="http://danielmwatkins.github.io/blog/getting-started-with-julia/" rel="alternate" type="text/html" title="Getting started with Julia" /><published>2022-09-09T00:00:00-04:00</published><updated>2022-09-09T00:00:00-04:00</updated><id>http://danielmwatkins.github.io/blog/getting-started-with-julia</id><content type="html" xml:base="http://danielmwatkins.github.io/blog/getting-started-with-julia/">&lt;p&gt;Julia is a programming language designed for fast scientific computing. It aims to take the readability of Python and Matlab and couple that with the speed of C and Fortran. It also happens to be the language that a key piece of software in my lab is written in, so it’s one I need to learn how to use. This post describes how I got up and running with Julia in a Jupyter Notebook on a M1 Mac.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Go to the &lt;a href=&quot;https://julialang.org/downloads/&quot;&gt;Julia download page&lt;/a&gt;. Download the one that matches your system. For Mac, installation is as simple as dragging the icon into the applications folder.&lt;/p&gt;

&lt;h2 id=&quot;make-julia-accessible-from-terminal&quot;&gt;Make Julia accessible from Terminal&lt;/h2&gt;
&lt;p&gt;I usually launch Jupyter from within a conda environment in the Terminal. To access Julia from Terminal it needs to be added to the path. Instructions from the [Julia docs] are reproduced here:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mkdir -p /usr/local/bin
sudo rm -f /usr/local/bin/julia
sudo ln -s /Applications/Julia-1.8.app/Contents/Resources/julia/bin/julia /usr/local/bin/julia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Daniel Watkins</name></author><category term="Blog" /><category term="julia" /><category term="programming" /><category term="scientific computing" /><summary type="html">Julia is a programming language designed for fast scientific computing. It aims to take the readability of Python and Matlab and couple that with the speed of C and Fortran. It also happens to be the language that a key piece of software in my lab is written in, so it’s one I need to learn how to use. This post describes how I got up and running with Julia in a Jupyter Notebook on a M1 Mac.</summary></entry></feed>